<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Mit on LTX's Blog</title><link>https://LTXWorld.github.io/tags/mit/</link><description>Recent content in Mit on LTX's Blog</description><image><title>LTX's Blog</title><url>https://LTXWorld.github.io/images/papermod-cover.png</url><link>https://LTXWorld.github.io/images/papermod-cover.png</link></image><generator>Hugo -- 0.145.0</generator><language>zh</language><copyright>©2025 LTX&amp;rsquo;s Blog</copyright><lastBuildDate>Mon, 19 May 2025 17:22:07 +0800</lastBuildDate><atom:link href="https://LTXWorld.github.io/tags/mit/index.xml" rel="self" type="application/rss+xml"/><item><title>Mit6.824Lab1流程梳理</title><link>https://LTXWorld.github.io/posts/039mit6.824lab1/</link><pubDate>Mon, 19 May 2025 17:22:07 +0800</pubDate><guid>https://LTXWorld.github.io/posts/039mit6.824lab1/</guid><description>&lt;h2 id="引子">引子&lt;/h2>
&lt;p>本文记录完成 &lt;a href="https://pdos.csail.mit.edu/6.824/labs/lab-mr.html">Lab01 &lt;/a>的过程,跟着 AI 照猫画虎.&lt;/p>
&lt;h2 id="mapreduce">MapReduce&lt;/h2>
&lt;p>首先我们需要简单了解一下 MapReduce 这篇论文,其提出了分布式的思想,具体如下:&lt;/p>
&lt;ul>
&lt;li>Map:将一个大的问题分解为小问题,应用用户定义的 Map 函数,生成中间键值对——文本分割为单词,输出 &lt;code>{world, 1}&lt;/code> 这样的键值对&lt;/li>
&lt;li>Reduce: 将中间键值对按 key 分组,应用用户定义的 Reduce 函数,生成最终输出——Reduce 对同一 key 进行计数求和 &lt;code>{word, count}&lt;/code>&lt;/li>
&lt;li>系统可以自动做到&lt;strong>并行,任务调度,负载均衡,容错&lt;/strong>,让用户只需要开发 Map 和 Reduce 这两个函数&lt;/li>
&lt;/ul>
&lt;p>这样的一个系统由三部分组成&lt;/p></description></item></channel></rss>