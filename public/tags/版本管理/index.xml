<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>版本管理 on LTX's Blog</title><link>https://LTXWorld.github.io/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</link><description>Recent content in 版本管理 on LTX's Blog</description><image><title>LTX's Blog</title><url>https://LTXWorld.github.io/images/papermod-cover.png</url><link>https://LTXWorld.github.io/images/papermod-cover.png</link></image><generator>Hugo -- 0.145.0</generator><language>zh</language><copyright>©2025 LTX&amp;rsquo;s Blog</copyright><lastBuildDate>Sun, 13 Jul 2025 18:50:18 +0800</lastBuildDate><atom:link href="https://LTXWorld.github.io/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Git——真是让我欢喜让我忧</title><link>https://LTXWorld.github.io/posts/043git-%E8%AE%A9%E6%88%91%E6%AC%A2%E5%96%9C%E8%AE%A9%E6%88%91%E5%BF%A7/</link><pubDate>Sun, 13 Jul 2025 18:50:18 +0800</pubDate><guid>https://LTXWorld.github.io/posts/043git-%E8%AE%A9%E6%88%91%E6%AC%A2%E5%96%9C%E8%AE%A9%E6%88%91%E5%BF%A7/</guid><description>&lt;h2 id="引子">引子&lt;/h2>
&lt;p>说起 Git，正如标题所述，让我欢喜让我忧。回想起本科学材料写毕业论文的时候，根本没有版本控制的概念，改了之后不满意就 ctrl+z 或者再回来 ctrl+shift+z。&lt;/p>
&lt;p>甚至大三的时候我连 github 都不知道怎么用，还问过别人怎么用，搜过 B 站的教程。现在看来，哈哈，成长的必经之路。&lt;/p></description></item><item><title>Golang版本更新工具</title><link>https://LTXWorld.github.io/posts/042golang%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0/</link><pubDate>Fri, 11 Jul 2025 11:40:27 +0800</pubDate><guid>https://LTXWorld.github.io/posts/042golang%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0/</guid><description>&lt;h2 id="引子">引子&lt;/h2>
&lt;p>在使用 Go 语言开发过程中，我发现经常会遇到想使用的项目的 Go 版本与当前本机的 Go 版本不一致的情况，通常是本地的版本较低。&lt;/p>
&lt;p>所以每次都需要去手动更新版本，而手动更新的过程是比较繁琐的，需要下载新版本并替换旧版本（听起来也没什么是吧）但是 Go 版本的更新还算是比较频繁的，特别是各种小版本。&lt;/p></description></item></channel></rss>